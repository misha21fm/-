// <auto-generated />
using System;
using FaskhutdinovMikhailKT_31_21.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaskhutdinovMikhailKT_31_21.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241004152632_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .HasComment("Название ученой степени");

                    b.HasKey("AcademicDegreeId");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int?>("HeadId")
                        .HasColumnType("int")
                        .HasColumnName("head_id")
                        .HasComment("Идентификатор главы кафедры");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name")
                        .HasComment("Название кафедры");

                    b.HasKey("DepartmentId");

                    b.HasIndex("HeadId")
                        .IsUnique()
                        .HasFilter("[head_id] IS NOT NULL");

                    b.HasIndex(new[] { "HeadId" }, "index_head_id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name")
                        .HasComment("Название дисциплины");

                    b.HasKey("DisciplineId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .HasComment("Название должности");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("AcademicDegreeId")
                        .HasColumnType("int")
                        .HasColumnName("academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("firstname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lastname")
                        .HasComment("Имя преподавателя");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("patronymic")
                        .HasComment("Отчество преподавателя");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    b.HasKey("TeacherId");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "index_academic_degree_id");

                    b.HasIndex(new[] { "DepartmentId" }, "index_department_id");

                    b.HasIndex(new[] { "PositionId" }, "index_position_id");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.TeacherDiscipline", b =>
                {
                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    b.Property<int>("WorkloadHours")
                        .HasColumnType("int")
                        .HasColumnName("workload_hours")
                        .HasComment("Рабочие часы");

                    b.HasKey("DisciplineId", "TeacherId")
                        .HasName("pk_teacher_discipline");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherDiscipline", (string)null);
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Department", b =>
                {
                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("FaskhutdinovMikhailKT_31_21.Models.Department", "HeadId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Head");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Teacher", b =>
                {
                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Teachers")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.TeacherDiscipline", b =>
                {
                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Discipline", "Discipline")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Teacher", "Teacher")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Discipline", b =>
                {
                    b.Navigation("TeacherDisciplines");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Teacher", b =>
                {
                    b.Navigation("TeacherDisciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
