// <auto-generated />
using System;
using FaskhutdinovMikhailKT_31_21.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaskhutdinovMikhailKT_31_21.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241018160438_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_title")
                        .HasComment("Название ученой степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_cs_academic_degree_academic_degree_id");

                    b.ToTable("cs_academic_degree", (string)null);

                    b.HasData(
                        new
                        {
                            AcademicDegreeId = 1,
                            Title = "PhD in Computer Science"
                        },
                        new
                        {
                            AcademicDegreeId = 2,
                            Title = "PhD in Mathematics"
                        },
                        new
                        {
                            AcademicDegreeId = 3,
                            Title = "PhD in Physics"
                        },
                        new
                        {
                            AcademicDegreeId = 4,
                            Title = "Master of Science"
                        },
                        new
                        {
                            AcademicDegreeId = 5,
                            Title = "Master of Arts"
                        },
                        new
                        {
                            AcademicDegreeId = 6,
                            Title = "Bachelor of Science"
                        },
                        new
                        {
                            AcademicDegreeId = 7,
                            Title = "Bachelor of Arts"
                        },
                        new
                        {
                            AcademicDegreeId = 8,
                            Title = "Doctor of Engineering"
                        },
                        new
                        {
                            AcademicDegreeId = 9,
                            Title = "Doctor of Philosophy"
                        },
                        new
                        {
                            AcademicDegreeId = 10,
                            Title = "Doctor of Education"
                        });
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("d_create")
                        .HasComment("Дата основания кафедры");

                    b.Property<int?>("HeadId")
                        .HasColumnType("int")
                        .HasColumnName("f_head_id")
                        .HasComment("Идентификатор главы кафедры");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_name")
                        .HasComment("Название кафедры");

                    b.HasKey("DepartmentId")
                        .HasName("pk_cs_department_department_id");

                    b.HasIndex("HeadId")
                        .IsUnique()
                        .HasFilter("[f_head_id] IS NOT NULL");

                    b.HasIndex(new[] { "HeadId" }, "idx_head_id");

                    b.ToTable("cs_department", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7147),
                            Name = "Computer Science"
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7160),
                            Name = "Mathematics"
                        },
                        new
                        {
                            DepartmentId = 3,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7162),
                            Name = "Physics"
                        },
                        new
                        {
                            DepartmentId = 4,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7163),
                            Name = "Chemistry"
                        },
                        new
                        {
                            DepartmentId = 5,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7165),
                            Name = "Biology"
                        },
                        new
                        {
                            DepartmentId = 6,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7166),
                            Name = "Electrical Engineering"
                        },
                        new
                        {
                            DepartmentId = 7,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7167),
                            Name = "Mechanical Engineering"
                        },
                        new
                        {
                            DepartmentId = 8,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7168),
                            Name = "Civil Engineering"
                        },
                        new
                        {
                            DepartmentId = 9,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7170),
                            Name = "Economics"
                        },
                        new
                        {
                            DepartmentId = 10,
                            CreateDate = new DateTime(2024, 10, 18, 19, 4, 38, 7, DateTimeKind.Local).AddTicks(7171),
                            Name = "Psychology"
                        });
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_name")
                        .HasComment("Название дисциплины");

                    b.HasKey("DisciplineId")
                        .HasName("pk_cs_discipline_discipline_id");

                    b.ToTable("cs_discipline", (string)null);

                    b.HasData(
                        new
                        {
                            DisciplineId = 1,
                            Name = "Algorithms and Data Structures"
                        },
                        new
                        {
                            DisciplineId = 2,
                            Name = "Linear Algebra"
                        },
                        new
                        {
                            DisciplineId = 3,
                            Name = "Quantum Mechanics"
                        },
                        new
                        {
                            DisciplineId = 4,
                            Name = "Organic Chemistry"
                        },
                        new
                        {
                            DisciplineId = 5,
                            Name = "Genetics"
                        },
                        new
                        {
                            DisciplineId = 6,
                            Name = "Circuit Design"
                        },
                        new
                        {
                            DisciplineId = 7,
                            Name = "Thermodynamics"
                        },
                        new
                        {
                            DisciplineId = 8,
                            Name = "Structural Analysis"
                        },
                        new
                        {
                            DisciplineId = 9,
                            Name = "Microeconomics"
                        },
                        new
                        {
                            DisciplineId = 10,
                            Name = "Cognitive Psychology"
                        });
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_title")
                        .HasComment("Название должности");

                    b.HasKey("PositionId")
                        .HasName("pk_cs_position_position_id");

                    b.ToTable("cs_position", (string)null);

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            Title = "Professor"
                        },
                        new
                        {
                            PositionId = 2,
                            Title = "Associate Professor"
                        },
                        new
                        {
                            PositionId = 3,
                            Title = "Assistant Professor"
                        },
                        new
                        {
                            PositionId = 4,
                            Title = "Lecturer"
                        },
                        new
                        {
                            PositionId = 5,
                            Title = "Research Fellow"
                        },
                        new
                        {
                            PositionId = 6,
                            Title = "Teaching Assistant"
                        },
                        new
                        {
                            PositionId = 7,
                            Title = "Lab Instructor"
                        },
                        new
                        {
                            PositionId = 8,
                            Title = "Department Chair"
                        },
                        new
                        {
                            PositionId = 9,
                            Title = "Dean"
                        },
                        new
                        {
                            PositionId = 10,
                            Title = "Academic Advisor"
                        });
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("AcademicDegreeId")
                        .HasColumnType("int")
                        .HasColumnName("f_academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("f_department_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_firstname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_lastname")
                        .HasComment("Имя преподавателя");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("c_patronymic")
                        .HasComment("Отчество преподавателя");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("f_position_id")
                        .HasComment("Идентификатор должности");

                    b.HasKey("TeacherId")
                        .HasName("pk_cd_teacher_teacher_id");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "idx_academic_degree_id");

                    b.HasIndex(new[] { "DepartmentId" }, "idx_department_id");

                    b.HasIndex(new[] { "PositionId" }, "idx_position_id");

                    b.ToTable("cd_teacher", (string)null);

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            AcademicDegreeId = 1,
                            FirstName = "John",
                            LastName = "Smith",
                            Patronymic = "A.",
                            PositionId = 1
                        },
                        new
                        {
                            TeacherId = 2,
                            AcademicDegreeId = 2,
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Patronymic = "B.",
                            PositionId = 2
                        },
                        new
                        {
                            TeacherId = 3,
                            AcademicDegreeId = 3,
                            FirstName = "Robert",
                            LastName = "Brown",
                            Patronymic = "C.",
                            PositionId = 3
                        },
                        new
                        {
                            TeacherId = 4,
                            AcademicDegreeId = 4,
                            FirstName = "Mary",
                            LastName = "Jones",
                            Patronymic = "D.",
                            PositionId = 4
                        },
                        new
                        {
                            TeacherId = 5,
                            AcademicDegreeId = 5,
                            FirstName = "Michael",
                            LastName = "Williams",
                            Patronymic = "E.",
                            PositionId = 5
                        },
                        new
                        {
                            TeacherId = 6,
                            AcademicDegreeId = 6,
                            FirstName = "Patricia",
                            LastName = "Garcia",
                            Patronymic = "F.",
                            PositionId = 6
                        },
                        new
                        {
                            TeacherId = 7,
                            AcademicDegreeId = 7,
                            FirstName = "Linda",
                            LastName = "Miller",
                            Patronymic = "G.",
                            PositionId = 7
                        },
                        new
                        {
                            TeacherId = 8,
                            AcademicDegreeId = 8,
                            FirstName = "James",
                            LastName = "Martinez",
                            Patronymic = "H.",
                            PositionId = 8
                        },
                        new
                        {
                            TeacherId = 9,
                            AcademicDegreeId = 9,
                            FirstName = "Barbara",
                            LastName = "Lopez",
                            Patronymic = "I.",
                            PositionId = 9
                        },
                        new
                        {
                            TeacherId = 10,
                            AcademicDegreeId = 10,
                            FirstName = "David",
                            LastName = "Wilson",
                            Patronymic = "J.",
                            PositionId = 10
                        });
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.TeacherDiscipline", b =>
                {
                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("f_discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("f_teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    b.Property<int>("WorkloadHours")
                        .HasColumnType("int")
                        .HasColumnName("n_workload_hours")
                        .HasComment("Рабочие часы");

                    b.HasKey("DisciplineId", "TeacherId")
                        .HasName("pk_cd_teacher_discipline_teacher_discipline_id");

                    b.HasIndex(new[] { "DisciplineId" }, "idx_discipline_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_teacher_id");

                    b.ToTable("cd_teacher_discipline", (string)null);

                    b.HasData(
                        new
                        {
                            DisciplineId = 1,
                            TeacherId = 1,
                            WorkloadHours = 100
                        },
                        new
                        {
                            DisciplineId = 2,
                            TeacherId = 2,
                            WorkloadHours = 80
                        },
                        new
                        {
                            DisciplineId = 3,
                            TeacherId = 3,
                            WorkloadHours = 90
                        },
                        new
                        {
                            DisciplineId = 4,
                            TeacherId = 4,
                            WorkloadHours = 110
                        },
                        new
                        {
                            DisciplineId = 5,
                            TeacherId = 5,
                            WorkloadHours = 95
                        },
                        new
                        {
                            DisciplineId = 6,
                            TeacherId = 6,
                            WorkloadHours = 70
                        },
                        new
                        {
                            DisciplineId = 7,
                            TeacherId = 7,
                            WorkloadHours = 85
                        },
                        new
                        {
                            DisciplineId = 8,
                            TeacherId = 8,
                            WorkloadHours = 120
                        },
                        new
                        {
                            DisciplineId = 9,
                            TeacherId = 9,
                            WorkloadHours = 75
                        },
                        new
                        {
                            DisciplineId = 10,
                            TeacherId = 10,
                            WorkloadHours = 65
                        });
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Department", b =>
                {
                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("FaskhutdinovMikhailKT_31_21.Models.Department", "HeadId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_f_head_id");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.Teacher", b =>
                {
                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.AcademicDegree", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_f_academic_degree_id");

                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_f_position_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("FaskhutdinovMikhailKT_31_21.Models.TeacherDiscipline", b =>
                {
                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("FaskhutdinovMikhailKT_31_21.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_teacher_id");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
